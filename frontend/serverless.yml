service: btcfix
useDotenv: true

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs18.x
  region: ${env:AWS_REGION}
  environment:
    STAGE: ${opt:stage, 'dev'}

plugins:
  - serverless-lift
  - serverless-scriptable-plugin

custom:
  domain:
    prod:
      - ${env:DOMAIN}
      - www.${env:DOMAIN}
    dev: dev.${env:DOMAIN}
  scriptable:
    hooks:
      package:initialize: "sh ./ci/build.sh"

constructs:
  website:
    type: single-page-app
    path: build
    domain: ${self:custom.domain.${self:provider.stage}}
    certificate: arn:aws:acm:us-east-1:${env:AWS_ACCOUNT_ID}:certificate/${env:CERTIFICATE_ID}
    redirectToMainDomain: true

resources:
  Conditions:
    IsProd:
      Fn::Equals:
        - ${self:provider.stage}
        - prod
    IsNotProd:
      Fn::Equals:
        - ${self:provider.stage}
        - dev
  Resources:
    Route53Record:
      Type: AWS::Route53::RecordSet
      Condition: IsProd
      Properties:
        HostedZoneId: ${env:HOSTED_ZONE_ID}
        Name: ${env:DOMAIN}
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: ${construct:website.cname}
    Route53RecordWWW:
      Type: AWS::Route53::RecordSet
      Condition: IsProd
      Properties:
        HostedZoneId: ${env:HOSTED_ZONE_ID}
        Name: www.${env:DOMAIN}
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: ${construct:website.cname}
    Route53RecordDev:
      Type: AWS::Route53::RecordSet
      Condition: IsNotProd
      Properties:
        HostedZoneId: ${env:HOSTED_ZONE_ID}
        Name: dev.${env:DOMAIN}
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: ${construct:website.cname}
