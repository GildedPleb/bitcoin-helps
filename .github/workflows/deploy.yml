# ./.github/workflows/deploy.yml

name: Deploy

concurrency:
  group: deploy
  cancel-in-progress: false

on:
  push:
    branches:
      - dev
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Allow GitHub traffic
        run: aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_VPC_SECURITY_GROUP_GITHUB }} --protocol tcp --port ${{ secrets.AWS_SECURITY_GROUP_PORT }} --cidr ${{ secrets.AWS_SECURITY_GROUP_CIDR }}

      - name: Deploy
        env:
          STAGE: ${{ github.ref == 'refs/heads/master' && 'prod' || 'dev' }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          SPEEDUP_AMOUNT_SATS_dev: ${{ vars.SPEEDUP_AMOUNT_SATS_DEV }}
          SPEEDUP_AMOUNT_SATS_prod: ${{ vars.SPEEDUP_AMOUNT_SATS_PROD }}
          VITE_SITE_TITLE: ${{ vars.VITE_SITE_TITLE }}
          VITE_SITE_DESCRIPTION: ${{ vars.VITE_SITE_DESCRIPTION }}

          # Backend
          GPT_VERSION_dev: ${{ vars.GPT_VERSION_DEV }}
          GPT_VERSION_prod: ${{ vars.GPT_VERSION_PROD }}
          DATABASE_URL_dev: ${{ secrets.DATABASE_URL_DEV }}
          DATABASE_URL_prod: ${{ secrets.DATABASE_URL_PROD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AWS_VPC_SECURITY_GROUP: ${{ secrets.AWS_VPC_SECURITY_GROUP }}
          AWS_VPC_SUBNET_1: ${{ secrets.AWS_VPC_SUBNET_1 }}
          AWS_VPC_SUBNET_2: ${{ secrets.AWS_VPC_SUBNET_2 }}
          AWS_VPC_SUBNET_3: ${{ secrets.AWS_VPC_SUBNET_3 }}
          AWS_IOT_CLIENT_ID: ${{ secrets.AWS_IOT_CLIENT_ID }}
          AWS_IOT_HOST: ${{ secrets.AWS_IOT_HOST }}
          AWS_DEVICE_PRIVATE_KEY: ${{ secrets.AWS_DEVICE_PRIVATE_KEY }}
          WH_SECRET: ${{ secrets.WH_SECRET }}
          ALBY_ACCOUNT_NAME: ${{ secrets.ALBY_ACCOUNT_NAME }}

          # Frontend
          DISABLE_ESLINT_PLUGIN: true
          VITE_APP_API_URL_HTTP_DEV: ${{ secrets.VITE_APP_API_URL_HTTP_DEV }}
          VITE_APP_API_URL_HTTP_PROD: ${{ secrets.VITE_APP_API_URL_HTTP_PROD }}
          VITE_APP_API_URL_WS_DEV: ${{ secrets.VITE_APP_API_URL_WS_DEV }}
          VITE_APP_API_URL_WS_PROD: ${{ secrets.VITE_APP_API_URL_WS_PROD }}
          HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
          DOMAIN: ${{ vars.DOMAIN }}
          CERTIFICATE_ID: ${{ secrets.CERTIFICATE_ID }}

        run: ./deploy.sh $STAGE

      - name: Revoke GitHub traffic
        if: always()
        run: aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_VPC_SECURITY_GROUP_GITHUB }} --protocol tcp --port ${{ secrets.AWS_SECURITY_GROUP_PORT }} --cidr ${{ secrets.AWS_SECURITY_GROUP_CIDR }}
